// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    // Calculating out + 1
    Inc16(in=memory, out=outPlusOne);

    // Selecting in increasing order of priority, so higher-priority 
    // control bits are applied last

    // If inc == 1 then outAfterInc = out + 1, otherwise outAfterInc = out
    Mux16(a=memory, b=outPlusOne, sel=inc, out=outAfterInc);
    
    // If load == 1 then outAfterLoad = in, otherwise outAfterLoad = outAfterInc
    Mux16(a=outAfterInc, b=in, sel=load, out=outAfterLoad);

    // If reset == 1 then outAfterReset = 0, otherwie outAfterReset = outAfterLoad
    Mux16(a=outAfterLoad, b=false, sel=reset, out=outAfterReset);

    // Fan out the final output to the register, the incrementor, and the first Mux16
    Register(in=outAfterReset, load=true, out=out, out=memory);

}